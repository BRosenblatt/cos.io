# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-02-27 21:53
from __future__ import unicode_literals

import json

from django.db import migrations
from common.models import Organization

import logging
logger = logging.getLogger('django')


def add_top_signatories(*args, **kwargs):
    with open('cos/static/toporgs.json') as top_json:
        top_orgs = json.load(top_json)

    for entry in top_orgs:
        org_name = entry.get('Organization')

        try:
            org = Organization.objects.get(name=org_name)
            org.is_top_signatory = True
            org.save()
            logger.info('Organization {} successfully marked as a TOP Signatory'.format(org_name))
        except Organization.DoesNotExist:
            logger.warn('Organization {} not found, *not* marked as TOP Signatory'.format(org_name))


def remove_top_signatories(*args, **kwargs):
    with open('../../cos/static/toporgs.json') as top_json:
        top_orgs = json.load(top_json)

    for entry in top_orgs:
        org_name = entry.get('Organization')

        try:
            org = Organization.objects.get(name=org_name)
            org.is_top_signatory = False
            org.save()
            logger.info('Organization {} successfully un-marked as a TOP Signatory')
        except Organization.DoesNotExist:
            logger.warn('Organization {} not found, *not* un-marked as TOP Signatory'.format(org_name))


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0049_organization_is_top_signatory'),
    ]

    operations = [
        migrations.RunPython(add_top_signatories, remove_top_signatories),
    ]
