# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-03-30 19:46
from __future__ import unicode_literals

import json

from django.db import migrations
from common.models import Journal

import logging
logger = logging.getLogger('django')


SPRINGER_NATURE_JOURNALS = 'cos/static/SpringerNature.json'


def add_top_signatories(*args, **kwargs):
    with open(SPRINGER_NATURE_JOURNALS, 'r') as top_file:
        top_journals = json.load(top_file)

    for entry in top_journals:
        journal, created = Journal.objects.get_or_create(
            title=entry['title']
        )

        if created:
            journal.publisher = entry.get('publisher', '')
            journal.association = entry.get('society', '')

        journal.is_preregistered_journal = True
        journal.is_top_journal = True

        journal.save()

        logger.info('The journal {} has been successfully created, and marked for prereg and top.'.format(entry['title']))

    logger.info('{} Journals successfully imported!'.format(len(top_journals)))


def remove_top_signatories(*args, **kwargs):
    with open(SPRINGER_NATURE_JOURNALS, 'r') as top_file:
        top_journals = json.load(top_file)

    for entry in top_journals:
        try:
            journal_to_remove = Journal.objects.get(
                title=entry['title'],
                publisher=entry.get('publisher', None),
                association=entry.get('society', None)
            )
            journal_to_remove.delete()
            logger.info('The journal {} has been successfully deleted'.format(entry['title']))
        except Journal.DoesNotExist:
            logger.warn('The journal {} could not be found, so was not deleted'.format(entry['title']))

    logger.info('{} Journals successfully deleted!'.format(len(top_journals)))


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0050_auto_20170227_2153'),
    ]

    operations = [
        migrations.RunPython(add_top_signatories, remove_top_signatories),
    ]
